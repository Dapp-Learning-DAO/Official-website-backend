server:
  port: 8080
  tomcat:
    max-swallow-size: 10MB
  servlet:
    session:
      timeout: 60m
      cookie:
        max-age: 7200
spring:
  datasource:
    url: jdbc:mysql://mysql:3306/dl?allowPublicKeyRetrieval=true&useSSL=false&cachePrepStmts=true&useServerPrepStmts=true&rewriteBatchedStatements=true
    #type: com.alibaba.druid.pool.DruidDataSource
    username: root
    password: ${SPRING_DATASOURCE_PASSWORD}
    maximum-pool-size: 20

  jpa:
    hibernate:
      ddl-auto: update
    generate-ddl: true
    show-sql: false
    database-platform: org.hibernate.dialect.MySQL5Dialect
    properties:
      hibernate:
        jdbc:
          batch_size: 1000
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
  mail:
    host: ${SMTP_SERVER:smtp.gmail.com}
    port: ${SMTP_SERVER_PORT:587}
    username: ${MAIL_ADDRESS}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  session:
    store-type: jdbc
    jdbc:
      initialize-schema: always
      cleanup-cron: 0 */3 * * * *
    timeout: 7200

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

logging:
  level:
    org.springframework.security: info

web3j:
  client-address: "https://polygon-rpc.com"
  httpTimeoutSeconds: ${WEB3J_HTTP_TIMEOUT_SECOND:300}

network:
  configs:
    - id: "137"
      name: "polygon"
      rpc: "https://polygon-rpc.com"
    - id: "10"
      name: "optimism"
      rpc: "https://optimism.llamarpc.com"
    - id: "534352"
      name: "scroll"
      rpc: "https://rpc.scroll.io"
    - id: "42161"
      name: "arbitrum"
      rpc: "https://arbitrum.llamarpc.com"
    - id: "8453"
      name: "base"
      rpc: "https://base.llamarpc.com"
    - id: "100"
      name: "gnosis"
      rpc: "https://gnosis.drpc.org"



jobs:
  redpacket:
    corn: ${CRON_REDPACKET:0/5 * * * * ?}
  distribute:
    corn: ${CRON_DIS:0/5 * * * * ?}
  defi:
    corn: ${CRON_DEFI:0 10 * * * ?}
  bounty:
    corn: ${CRON_BOUNTY:0 */1 * * *}
oauth:
  registrations:
    github:
      clientId: "${GITHUB_CLIENT_ID}"
      clientSecret: "${GITHUB_CLIENT_SECRET}"
      accessTokenUri: https://github.com/login/oauth/access_token
      userAuthorizationUri: https://github.com/login/oauth/authorize
      userInfoUri: https://api.github.com/user
    twitter:
      clientId: "${TWITTER_CLIENT_KEY}"
      clientSecret: "${TWITTER_CLIENT_SECRET}"
      callbackUrl: "${TWITTER_CALLBACK_URL}"
    telegram:
      clientSecret: "${TG_BOT_TOKEN}"
    discord:
      clientId: "${DISCORD_CHANNEL_MANAGEMENT_CLIENT_ID}"
      clientSecret: "${DISCORD_CHANNEL_MANAGEMENT_CLIENT_SECRET}"
      callbackUrl: "${DISCORD_CHANNEL_MANAGEMENT_CALLBACK_URL}"

qcloud:
  #初始化用户身份信息 前往控制台密钥管理查看
  secretId: ${SECRET_ID}
  secretKey: ${SECRET_KEY}
  # 指定要上传到的存储桶
  bucketName: ${BUCKET_NAME}
  # 地区选择
  regionName: ${REGION_NAME}

chain:
  ids: [ "11155111", "10", "534352", "42161", "324", "1101", "59144" ]

login:
  filter: ${LOGIN_FILTER:true}

bot:
  discord:
    botToken: ${DISCORD_BOT_TOKEN}
    groupList:
      - groupId: ${GUILD_DAPP_LEARNING_ID}
        groupName: DAPP_LEARNING

  telegram:
    botToken: ${TG_BOT_TOKEN}
    timeoutInSeconds: ${TG_BOT_TIMEOUT:10}
    groupList:
      - groupId: ${TG_DAPP_LEARNING_GROUP_ID}
        groupName: DAPP_LEARNING
        topicOrChannelList:
          - name: general-chat
            threadOrTopicId: 1
          - name: sharing
            threadOrTopicId: 414
          - name: hiring
            threadOrTopicId: 423
          - name: github
            threadOrTopicId: 415
          - name: builder
            threadOrTopicId: 422
          - name: translation
            threadOrTopicId: 416

hook:
  open: false

#debank config
debank:
  protocolList: https://pro-openapi.debank.com/v1/user/all_simple_protocol_list
  userTokenList: https://pro-openapi.debank.com/v1/user/all_token_list
  totalBalance: https://pro-openapi.debank.com/v1/user/total_balance
  key:

activity:
  name: THIRD_ANNIVERSARY_EVENT
  taskMap:
    GitHub:
      - name: Star the official GitHub Repository
        target: Dapp-Learning-DAO/dapp-learning
        targetUrl: https://github.com/Dapp-Learning-DAO/dapp-learning
    Telegram:
      - name: Join official Telegram channel
        target: ${TG_DAPP_LEARNING_GROUP_ID}
        targetUrl: ${TELEGRAM_INVITE_URL}
    Discord:
      - name: Join official Discord channel
        target: ${GUILD_DAPP_LEARNING_ID}
        targetUrl: ${DISCORD_INVITE_URL}
