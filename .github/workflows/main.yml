name: Deploy Official-website-backend to dev/prod Server

on:
  push:
    branches:
      - main
      - develop

jobs:
  set-environment:
    runs-on: ubuntu-latest

    steps:
      - name: Set environment name based on branch
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ENV_VAR=prod" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "ENV_VAR=dev" >> $GITHUB_ENV
          fi

      - name: Display environment variable
        run: |
          echo "Current branch is $ENV_VAR"

  deployment:
    needs: set-environment

    runs-on: ubuntu-latest
    environment: $ENV_VAR

    env:
      DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_IMAGE_VERSION: dev-latest
      DOCKER_IMAGE_NAME: dl-official-website-backend
      SERVER_USERNAME: ${{ vars.SERVER_USERNAME }}
      SERVER_HOST: ${{ vars.SERVER_HOST }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment variables based on branch
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "DOCKER_IMAGE_VERSION=main-latest" >> $GITHUB_ENV
            echo "BRANCH_NAME=main" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "DOCKER_IMAGE_VERSION=dev-latest" >> $GITHUB_ENV
            echo "BRANCH_NAME=develop" >> $GITHUB_ENV
          fi

      - name: Display current branch
        run: |
          echo "Current branch is $BRANCH_NAME"

      - name: Build Docker image
        run: |
          docker build -t $DOCKER_USERNAME/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_VERSION .

      - name: Push Docker image to registry
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker push $DOCKER_USERNAME/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_VERSION

      - name: SSH login to server and restart service
        uses: appleboy/ssh-action@master
        with:
          host: $SERVER_HOST
          username: $SERVER_USERNAME
          key: $SSH_PRIVATE_KEY
          port: 22
          script: |
            ssh-agent bash -c 'ssh-add - <<< "$SSH_PRIVATE_KEY"'
            cd /root/Official-website-backend
            docker pull $DOCKER_USERNAME/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_VERSION
            docker-compose up -d --force-recreate dl
