plugins {
	id 'java'
	id 'idea'
	id 'org.springframework.boot' version '2.7.16'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
//	id "org.web3j" version "4.9.8"
//	id("com.apollographql.apollo").version("2.5.14"
}

group = 'com.dl'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://maven.aliyun.com/repository/public' }
	maven { url 'https://jitpack.io' }
}



dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//	implementation 'org.springframework:org.springframework.context:3.2.1.RELEASE'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'


	implementation 'mysql:mysql-connector-java:8.0.28'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.session:spring-session-jdbc'
	implementation 'org.web3j:core:4.9.8'
// https://mvnrepository.com/artifact/org.json/json
	implementation 'org.json:json:20230618'

	// utils
	implementation "org.apache.commons:commons-lang3:3.6"
	implementation "commons-io:commons-io:2.11.0"
	implementation 'cn.hutool:hutool-all:5.8.4'
	implementation("com.google.guava:guava:31.1-jre")
	implementation 'com.github.ipfs:java-ipfs-http-client:1.3.3'
	implementation 'com.google.code.gson:gson:2.8.9'
//	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-graphql
	//implementation 'org.springframework.boot:spring-boot-starter-graphql:2.7.17'


	//graphql
//	implementation(platform("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:latest.release"))
//	implementation "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter"
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	implementation("com.apollographql.apollo:apollo-runtime:2.5.14")
	//implementation 'org.hibernate.validator:hibernate-validator:6.0.10.Final'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}


jar {
	destinationDir file('dist/apps')
	archiveName "dl"  + '.jar'
	doLast {
		copy {
			from file('src/main/resources/')
			into 'dist/conf/'
		}
		copy {
			from configurations.runtimeClasspath
			into 'dist/lib'
		}
		copy {
			from file('src/main/resources/application-template.yml')
			into 'dist/conf/'
		}
		copy {
			from file('start.sh')
			into 'dist/'
		}
		copy {
			from file('stop.sh')
			into 'dist/'
		}
		copy {
			from file('.').listFiles().findAll { File f -> (f.name.endsWith('.sh') || f.name.endsWith('.env')) }
			into 'dist'
		}
	}
}

clean {
	//println "delete ${projectDir}/dist"
	delete "${projectDir}/dist"
	delete 'build'
	delete 'log'
}
//
//web3j {
//	generatedPackageName = 'com.dl.officialsite.contract.{0}'
//	generatedFilesBaseDir = "src"
//	includedContracts = ['HappyRedPacket', 'ILendingPool', 'ILendingPoolAddressesProvider','IPoolAddressesProvider', "IPool"]
//	useNativeJavaTypes = true
//}

ext  {
	web3jVersion = '4.9.3'
}

sourceSets {
	main {
//		solidity {
//			srcDir {
//				"$project/src/main/solidity"
//			}
//		}
	}
}

//node {
//	nodeProjectDir = file("./node")
//}